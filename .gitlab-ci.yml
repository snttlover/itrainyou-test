image: docker:stable
variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
services:
  - docker:18.09-dind

stages:
  - build
  - deploy-dev
  - deploy-prod
  - deploy-staging

.build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker pull $LATEST_IMAGE || true
    - docker build -t $IMAGE -t $LATEST_IMAGE -t $HEROKU_IMAGE .
    - docker push $IMAGE
    - docker push $LATEST_IMAGE
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker push $HEROKU_IMAGE

build:
  extends: .build
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
    HEROKU_APP_NAME: itrainnew-frontend
    HEROKU_IMAGE: registry.heroku.com/$HEROKU_APP_NAME/web
  only:
    - development
    - master
    - staging

deploy-dev:
  stage: deploy-dev
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    IMAGE_NAME: itrainyoufrontend
    HEROKU_APP_NAME: itrainnew-frontend
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $HEROKU_APP_NAME
  only:
    - development

deploy-staging:
  stage: deploy-staging
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    IMAGE_NAME: itrainyoufrontend
    HEROKU_APP_NAME: stage-itrainyou
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $HEROKU_APP_NAME
  only:
    - staging

deploy-prod:
  stage: deploy-prod
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    IMAGE_NAME: itrainyoufrontend
    SERVER_IP: 109.71.10.78
    USER: 'django'
  script:
    - 'which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - echo "$PRODUCTION_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - ssh -p22 $USER@$SERVER_IP "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} registry.gitlab.com"
    - ssh -p22 $USER@$SERVER_IP "docker pull ${IMAGE_TAG}"
    - ssh -p22 $USER@$SERVER_IP "docker rm -f ${IMAGE_NAME} || true"
    - ssh -p22 $USER@$SERVER_IP "docker run --network=itrainyou-backend_default --name ${IMAGE_NAME} -e BACKEND_URL=https://backend.itrainyou.ru -e WS_HOST=wss://backend.itrainyou.ru -e AGORA_ID=ddc00001a79048e98fc21cfeef7efa7c -e SENTRY_CLIENT_DSN=https://1e724690c04949558b4f7f34d1536690@o474760.ingest.sentry.io/5511546 -e SENTRY_SERVER_DSN=https://b359770ce05a40ab86c17dd35faf34c1@o474760.ingest.sentry.io/5514727 -e FACEBOOK_CLIENT_ID=588161764971621 -e VK_CLIENT_ID=7636787 -e GOOGLE_CLIENT_ID=536974560462-812pv0n2s063m7keq9eiluqve3lfelf1.apps.googleusercontent.com -e ENVIRONMENT=production -e SERVER_DEFAULT_PAYMENT_SYSTEM=TINKOFF -e JIVO_ID=EcD5Lp21sP -e YANDEX_METRIKA_ID=68738200 -e PORT=3000  --restart unless-stopped -d ${IMAGE_TAG}"
    - ssh -p22 $USER@$SERVER_IP "docker logout registry.gitlab.com"
  only:
    - master
  when: manual
